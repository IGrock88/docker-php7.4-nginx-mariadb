version: '3'
services:
  java:
    container_name: ${APP_NAME:?err}-java
    restart: 'always'
    ports:
      - 12500:11111
    links:
      - php
    build:
      context: .
      dockerfile: ./docker/java.Dockerfile
    volumes:
      - ./java/logs:/var/java/app/target/logs

  webpack:
    container_name: ${APP_NAME:?err}-webpack
    build:
      context: .
      dockerfile: ./docker/node.Dockerfile
    volumes:
      - ./www/:/var/www/html/
    command: bash -c "yarn install && yarn ${WEBPACK_START_MODE:?build}"

  mariadb:
    image: mariadb:10.5.8
    container_name: ${APP_NAME:?err}-db
    restart: 'always'
    ports:
      - 37060:3306
    environment:
      MARIADB_PORT_NUMBER: 3306
      MARIADB_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}
      MARIADB_DATABASE: check_printer_admin
    volumes:
      - check_printer_data:/var/lib/mysql

  memcache:
    container_name: ${APP_NAME:?err}-memcached
    restart: 'always'
    build:
      context: .
      dockerfile: ./docker/memcached.Dockerfile
    volumes:
      - ./www/:/var/www/html

  php:
    restart: 'always'
    links:
      - mariadb
      - memcache
    extra_hosts:
      - avtovokzal.test:192.168.1.155  
    build:
      context: .
      dockerfile: ./docker/php.Dockerfile
    container_name: ${APP_NAME:?err}-php
    volumes:
      - './www/:/var/www/html'

  nginx:
    image: nginx:1.19.6-alpine
    restart: 'always'
    container_name: ${APP_NAME:?err}-nginx
    ports:
      - '12000:80'
      - '45443:443'
    links:
      - 'php'
      - logs
    volumes:
      - './www:/var/www/html'
      - './config/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf'
      - './config/nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './config/nginx/snippets/:/etc/nginx/snippets/'
      - './config/nginx/conf:/etc/nginx/conf.d/'
#
#  mongo:
#    restart: always
#    ports:
#      - ${MONGODB_LOCAL_PORT}:${MONGODB_DOCKER_PORT}
#    build:
#      context: .
#      dockerfile: ./docker/mongo.Dockerfile
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:?err}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:?err}
#      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
#    container_name: ${APP_NAME:?err}-mongo
#    volumes:
#    - mongo_data:/data/db
#
#  logs:
#    restart: always
#    container_name: ${APP_NAME:?err}-logs
#    ports:
#      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
#    environment:
#      DB_HOST: mongo
#      DB_USER: ${MONGODB_USER}
#      DB_PASSWORD: ${MONGODB_PASSWORD}
#      DB_NAME: ${MONGODB_DATABASE}
#      DB_PORT: ${MONGODB_DOCKER_PORT}
#    env_file: ./.env
#    depends_on:
#      - mongo
#    build:
#      context: .
#      dockerfile: ./docker/logs.Dockerfile
#    volumes:
#    - ./logs/:/usr/src/app

  composer_installation:
    container_name: ${APP_NAME:?err}-composer
    build:
      context: .
      dockerfile: ./docker/composer.Dockerfile
    volumes:
      - ./www/:/var/www/html
    command: bash -c "composer install --no-scripts --no-autoloader --no-plugins --ignore-platform-reqs && composer dump-autoload"

#  mailer:
#    image: ${APP_NAME:?err}-imixs/exim4:latest
#    container_name: ${APP_NAME:?err}-mailer
#    restart: always
#    #build:
#    #  context: .
#    environment:
#      EXIM_SMARTHOST: smtp.yandex.ru:465
#      EXIM_PASSWORD: smtp.yandex.ru:${MAILER_LOGIN:?err}:${MAILER_PASSWORD:?err}
#      EXIM_ALLOWED_SENDERS: 172.18.0.0/24:127.0.0.1
#    volumes:
#      - ./var/log/exim4:/var/log/exim4


volumes:
  check_printer_data:
    external: true
  mongo_data:
    external: true


